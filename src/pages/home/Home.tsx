'use client';
import './Home.css';
import Header from '@/components/Header/Header';
import Footer from '@/components/Footer/Footer';
import { Suspense, useEffect } from 'react';
import Script from 'next/script';

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–≤–∏–¥–∏–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º CSS
const DecorationImage = () => (
  <img 
    src="/decoration.svg"
    alt=""
    style={{
      position: 'absolute',
      width: 1,
      height: 1,
      opacity: 0,
      pointerEvents: 'none'
    }}
  />
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
const StructuredData = () => {
  const jsonLd = {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "name": "NeoPay Marketplace",
    "description": "–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –≥–µ–π–º–µ—Ä–æ–≤",
    "url": "https://neopay.com",
    "potentialAction": {
      "@type": "SearchAction",
      "target": "https://neopay.com/search?q={search_term_string}",
      "query-input": "required name=search_term_string"
    },
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": "4.8",
      "reviewCount": "50000"
    },
    "mainEntity": {
      "@type": "Organization",
      "name": "NeoPay",
      "description": "–ò–≥—Ä–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è",
      "offers": {
        "@type": "AggregateOffer",
        "offerCount": "1000+",
        "priceCurrency": "RUB",
        "lowPrice": "100",
        "highPrice": "100000"
      }
    }
  };

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
  useEffect(() => {
    if (process.env.NODE_ENV === 'development') {
      console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:', jsonLd);
      
      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –º–∏–∫—Ä–æ—Ä–∞–∑–º–µ—Ç–∫–∏
      const checkStructuredData = () => {
        const scripts = document.querySelectorAll('script[type="application/ld+json"]');
        const items = document.querySelectorAll('[itemscope]');
        
        console.log('–ù–∞–π–¥–µ–Ω–æ JSON-LD —Å–∫—Ä–∏–ø—Ç–æ–≤:', scripts.length);
        console.log('–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –º–∏–∫—Ä–æ—Ä–∞–∑–º–µ—Ç–∫–æ–π:', items.length);
        
        items.forEach((item, index) => {
          console.log(`–≠–ª–µ–º–µ–Ω—Ç ${index + 1}:`, {
            type: item.getAttribute('itemtype'),
            props: Array.from(item.querySelectorAll('[itemprop]')).map(prop => ({
              name: prop.getAttribute('itemprop'),
              content: prop.textContent || prop.getAttribute('content')
            }))
          });
        });
      };

      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      setTimeout(checkStructuredData, 1000);
    }
  }, []);

  return (
    <>
      <Script 
        id="structured-data"
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}
      />
      {process.env.NODE_ENV === 'development' && (
        <div id="seo-debug" style={{ display: 'none' }}>
          <h2>–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</h2>
          <pre>{JSON.stringify(jsonLd, null, 2)}</pre>
        </div>
      )}
    </>
  );
};

export default function Home() {
  return (
    <>
      <StructuredData />
      <div className="home">
        <DecorationImage />
        <Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>}>
          <Header />
        </Suspense>
        
        <main className="main-content">
          <div className="background-elements" aria-hidden="true">
            <div className="glow-circle primary"></div>
            <div className="glow-circle secondary"></div>
            <div className="grid-overlay"></div>
          </div>

          <div className="container">
            <section className="hero-section">
              <div className="hero-content">
                <div className="hero-badge">üöÄ –ù–æ–≤–æ–µ –ø–æ–∫–æ–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞</div>
                <h1 className="hero-title">
                  <span className="gradient-text">Neo</span>
                  <span className="text-white">Pay</span>
                </h1>
                <p className="hero-subtitle">
                  –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –≥–µ–π–º–µ—Ä–æ–≤
                  <span className="hero-stats">
                    <span className="stat" itemProp="userInteractionCount">
                      <strong>50K+</strong> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    </span>
                    <span className="stat-divider">‚Ä¢</span>
                    <span className="stat" itemProp="transactionCount">
                      <strong>100K+</strong> —Å–¥–µ–ª–æ–∫
                    </span>
                  </span>
                </p>
                
                <div className="hero-actions">
                  <button className="btn-primary">–ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é</button>
                  <button className="btn-secondary">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</button>
                </div>
              </div>
              
              <div className="search-wrapper">
                <div className="search-container">
                  <div className="search-input-wrapper">
                    <input 
                      type="text" 
                      placeholder="–ù–∞–π—Ç–∏ –∏–≥—Ä—É, –ø—Ä–µ–¥–º–µ—Ç –∏–ª–∏ —É—Å–ª—É–≥—É..." 
                      className="search-input"
                      aria-label="–ü–æ–∏—Å–∫ –ø–æ —Å–∞–π—Ç—É"
                    />
                    <button className="search-button">
                      <span className="search-icon" aria-hidden="true">üîç</span>
                      –ü–æ–∏—Å–∫
                    </button>
                  </div>
                  <div className="popular-tags">
                    <span className="tag-label">–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ:</span>
                    <div className="tags-list" itemProp="keywords">
                      {['CS2', 'Dota 2', 'WoW', 'LoL', 'Valorant'].map((tag, index) => (
                        <span key={tag} className="tag">
                          {tag}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </section>

            <section className="features-section" itemScope itemType="https://schema.org/ItemList">
              <div className="features-grid">
                {[
                  {
                    icon: 'üõ°Ô∏è',
                    title: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å–¥–µ–ª–∫–∏',
                    description: '–ì–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–≤—Ü—ã'
                  },
                  {
                    icon: '‚ö°',
                    title: '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã',
                    description: '–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –Ω–∞ –ª—é–±—É—é –∫–∞—Ä—Ç—É'
                  },
                  {
                    icon: 'üéÆ',
                    title: '–í—Å–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–≥—Ä—ã',
                    description: '–ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –∏–≥—Ä –∏ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤'
                  },
                  {
                    icon: 'üí¨',
                    title: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7',
                    description: '–ü–æ–º–æ—â—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –¥–Ω—è –∏ –Ω–æ—á–∏'
                  }
                ].map((feature, index) => (
                  <div 
                    key={index} 
                    className="feature-card" 
                    itemProp="itemListElement" 
                    itemScope 
                    itemType="https://schema.org/ListItem"
                  >
                    <span className="feature-icon" aria-hidden="true">{feature.icon}</span>
                    <h3 itemProp="name">{feature.title}</h3>
                    <p itemProp="description">{feature.description}</p>
                    <meta itemProp="position" content={String(index + 1)} />
                  </div>
                ))}
              </div>
            </section>

            <section className="orders-section">
              <div className="section-header">
                <div className="header-content">
                  <h2>–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã</h2>
                  <p className="section-subtitle">–ù–∞–π–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—ë</p>
                </div>
                <div className="view-controls" role="tablist">
                  <button className="view-btn active" role="tab" aria-selected="true">–í—Å–µ</button>
                  <button className="view-btn" role="tab" aria-selected="false">–ù–æ–≤—ã–µ</button>
                  <button className="view-btn" role="tab" aria-selected="false">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ</button>
                </div>
              </div>

              <div className="orders-grid">
                <div className="orders-list" itemScope itemType="https://schema.org/ItemList">
                  {[1, 2, 3].map(order => (
                    <div 
                      key={order} 
                      className="order-card"
                      itemProp="itemListElement"
                      itemScope
                      itemType="https://schema.org/Offer"
                    >
                      <div className="order-status">
                        <span className="status-dot"></span>
                        <meta itemProp="availability" content="https://schema.org/InStock" />
                        –ê–∫—Ç–∏–≤–Ω—ã–π
                      </div>
                      <div className="order-content">
                        <div className="game-info">
                          <span className="game-icon" aria-hidden="true">üéÆ</span>
                          <span className="game-name" itemProp="category">CS2</span>
                        </div>
                        <h3 className="order-title" itemProp="name">–ë—É—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ Silver Elite</h3>
                        <p className="order-description" itemProp="description">
                          –ù—É–∂–µ–Ω –±—É—Å—Ç —Å Silver Elite –¥–æ Gold Nova 3. –ò–≥—Ä–∞—é –Ω–∞ EU —Å–µ—Ä–≤–µ—Ä–∞—Ö.
                        </p>
                        <div className="order-meta">
                          <div className="price-tag">
                            <span className="price-amount" itemProp="price">2,500</span>
                            <meta itemProp="priceCurrency" content="RUB" />
                            <span className="price-duration">/–∑–∞–∫–∞–∑</span>
                          </div>
                          <button className="action-btn">–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è</button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>

                <aside className="chat-section" role="complementary">
                  <div className="chat-header">
                    <div className="chat-info">
                      <h3>–û–±—Å—É–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h3>
                      <span className="chat-subtitle">–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è</span>
                    </div>
                    <span className="online-status">
                      <span className="online-dot"></span>
                      2 –æ–Ω–ª–∞–π–Ω
                    </span>
                  </div>
                  <div className="chat-messages">
                    <div className="message-placeholder">
                      <span className="placeholder-icon" aria-hidden="true">üí¨</span>
                      <p>–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏—è</p>
                      <span className="placeholder-hint">–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞—â–∏—â–µ–Ω—ã end-to-end —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º</span>
                    </div>
                  </div>
                </aside>
              </div>
            </section>

            <section 
              className="services-section" 
              itemScope 
              itemType="https://schema.org/ItemList"
            >
              <h2 itemProp="name">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏</h2>
              <div className="services-grid">
                {[
                  {
                    icon: 'üèÜ',
                    title: '–ë—É—Å—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞',
                    description: '–ë—ã—Å—Ç—Ä—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –±—É—Å—Ç –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤',
                    price: '–æ—Ç 500‚ÇΩ/—á–∞—Å',
                    features: ['–û–ø—ã—Ç–Ω—ã–µ –∏–≥—Ä–æ–∫–∏', '–õ—é–±–æ–π —Ä–µ–π—Ç–∏–Ω–≥', '–ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞']
                  },
                  {
                    icon: 'üë®‚Äçüè´',
                    title: '–û–±—É—á–µ–Ω–∏–µ',
                    description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å –ø—Ä–æ-–∏–≥—Ä–æ–∫–∞–º–∏',
                    price: '–æ—Ç 1000‚ÇΩ/—á–∞—Å',
                    features: ['–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥', '–†–∞–∑–±–æ—Ä —Ä–µ–ø–ª–µ–µ–≤', '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã']
                  },
                  {
                    icon: '‚öîÔ∏è',
                    title: '–ü—Ä–æ–∫–∞—á–∫–∞',
                    description: '–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–∫–∞—á–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è',
                    price: '–æ—Ç 2000‚ÇΩ',
                    features: ['–õ—é–±—ã–µ –∑–∞–¥–∞–Ω–∏—è', '–ë—ã—Å—Ç—Ä–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ', '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å']
                  }
                ].map((service, index) => (
                  <div 
                    key={index} 
                    className="service-card"
                    itemProp="itemListElement"
                    itemScope
                    itemType="https://schema.org/Service"
                  >
                    <div className="service-icon" aria-hidden="true">{service.icon}</div>
                    <h3 itemProp="name">{service.title}</h3>
                    <p itemProp="description">{service.description}</p>
                    <ul className="service-features">
                      {service.features.map((feature, i) => (
                        <li key={i}>{feature}</li>
                      ))}
                    </ul>
                    <span className="service-price" itemProp="offers" itemScope itemType="https://schema.org/Offer">
                      <meta itemProp="priceCurrency" content="RUB" />
                      {service.price}
                    </span>
                    <button className="service-btn">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
                  </div>
                ))}
              </div>
            </section>
          </div>
        </main>

        <Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>}>
          <Footer />
        </Suspense>
      </div>
    </>
  );
} 